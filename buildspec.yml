version: 0.2

phases:
  install:
    runtime-versions:
      docker: 20.10.9
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/x4e9f8w5
      - REPOSITORY_URI=public.ecr.aws/x4e9f8w5/go-kardia
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-40)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      #- docker pull $REPOSITORY_URI:latest || true
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - export DOCKER_CLI_EXPERIMENTAL=enabled
      - mkdir -p ~/.docker/cli-plugins/
      - curl --silent -L "https://github.com/docker/buildx/releases/download/v0.9.1/buildx-v0.9.1.linux-arm64" > ~/.docker/cli-plugins/docker-buildx
      - chmod a+x ~/.docker/cli-plugins/docker-buildx
      - docker run --privileged --rm public.ecr.aws/x4e9f8w5/go-kardia:binfmt --install all
      - docker buildx create --use --name build --node build
      - echo "$REPOSITORY_URI:$IMAGE_TAG"
      - docker buildx build --platform linux/arm64 --tag $REPOSITORY_URI:$IMAGE_TAG -f Dockerfile.arm . --push
  post_build:
    commands:
      - echo Build completed on `date`
