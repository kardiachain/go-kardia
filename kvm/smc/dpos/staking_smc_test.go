/*
 *  Copyright 2018 KardiaChain
 *  This file is part of the go-kardia library.
 *
 *  The go-kardia library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  The go-kardia library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with the go-kardia library. If not, see <http://www.gnu.org/licenses/>.
 */

package dpos

import (
	"encoding/hex"
	"math"
	"math/big"
	"strings"
	"testing"

	"github.com/kardiachain/go-kardiamain/configs"
	"github.com/kardiachain/go-kardiamain/kai/kaidb/memorydb"
	"github.com/kardiachain/go-kardiamain/kai/storage/kvstore"
	"github.com/kardiachain/go-kardiamain/kvm/sample_kvm"
	"github.com/kardiachain/go-kardiamain/lib/abi"
	"github.com/kardiachain/go-kardiamain/lib/common"
	"github.com/kardiachain/go-kardiamain/lib/crypto"
	"github.com/kardiachain/go-kardiamain/lib/log"
	"github.com/kardiachain/go-kardiamain/mainchain/blockchain"
	"github.com/kardiachain/go-kardiamain/mainchain/genesis"
	"github.com/kardiachain/go-kardiamain/types"
)

func init() {
	configs.AddDefaultStakingContractAddress()
	configs.AddDefaultContract()
}

var stakingSmcCode = common.Hex2Bytes("")

var stakingSmcDefinition = `[
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "valAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionMaxRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionMaxChangeRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minSelfDelegation",
          "type": "uint256"
        }
      ],
      "name": "CreateValidator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "delAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Delegate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "missedBlocks",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockHeight",
          "type": "uint256"
        }
      ],
      "name": "Liveness",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "power",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reason",
          "type": "uint256"
        }
      ],
      "name": "Slashed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        }
      ],
      "name": "UnJail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "delAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "completionTime",
          "type": "uint256"
        }
      ],
      "name": "Undelegate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minSelfDelegation",
          "type": "uint256"
        }
      ],
      "name": "UpdateValidator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "delAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewards",
          "type": "uint256"
        }
      ],
      "name": "WithdrawCommissionReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "delAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewards",
          "type": "uint256"
        }
      ],
      "name": "WithdrawDelegationRewards",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "annualProvision",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "inflation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBonded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxValidators",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "downtimeJailDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseProposerReward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bonusProposerReward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "slashFractionDowntime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unbondingTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "slashFractionDoubleSign",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "signedBlockWindow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minSignedPerWindow",
          "type": "uint256"
        }
      ],
      "name": "setParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setTotalBonded",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "inflationRateChange",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "goalBonded",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blocksPerYear",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "inflationMax",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "inflationMin",
          "type": "uint256"
        }
      ],
      "name": "setMintParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMintParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "commssionRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxChangeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minSeftDelegation",
          "type": "uint256"
        }
      ],
      "name": "createValidator",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "commissionRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minSelfDelegation",
          "type": "uint256"
        }
      ],
      "name": "updateValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "undelegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        }
      ],
      "name": "withdrawReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delAddr",
          "type": "address"
        }
      ],
      "name": "getDelegationRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "withdrawValidatorCommission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        }
      ],
      "name": "getValidator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        }
      ],
      "name": "getDelegationsByValidator",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delAddr",
          "type": "address"
        }
      ],
      "name": "getDelegation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delAddr",
          "type": "address"
        }
      ],
      "name": "getValidatorsByDelegator",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        }
      ],
      "name": "getValidatorCommission",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delAddr",
          "type": "address"
        }
      ],
      "name": "getAllDelegatorRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delAddr",
          "type": "address"
        }
      ],
      "name": "getDelegatorStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delAddr",
          "type": "address"
        }
      ],
      "name": "getAllDelegatorStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delAddr",
          "type": "address"
        }
      ],
      "name": "getUBDEntries",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        }
      ],
      "name": "getValidatorSlashEvents",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "votingPower",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "distributionHeight",
          "type": "uint256"
        }
      ],
      "name": "doubleSign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "powers",
          "type": "uint256[]"
        },
        {
          "internalType": "bool[]",
          "name": "signed",
          "type": "bool[]"
        }
      ],
      "name": "finalizeCommit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "previousProposer",
          "type": "address"
        }
      ],
      "name": "setPreviousProposer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValidators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        }
      ],
      "name": "getMissedBlock",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_inflation",
          "type": "uint256"
        }
      ],
      "name": "setInflation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextInflationRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "nextAnnualProvisions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_annualProvision",
          "type": "uint256"
        }
      ],
      "name": "setAnnualProvision",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBlockProvision",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInflation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "applyAndReturnValidatorSets",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValidatorSets",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valAddr",
          "type": "address"
        }
      ],
      "name": "getValidatorPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "unjail",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ]`

func setupGenesis(g *genesis.Genesis, db types.StoreDB) (*configs.ChainConfig, common.Hash, error) {
	address := common.HexToAddress("0xc1fe56E3F58D3244F606306611a5d10c8333f1f6")
	privateKey, _ := crypto.HexToECDSA("8843ebcb1021b00ae9a644db6617f9c6d870e5fd53624cefe374c1d2d710fd06")
	return genesis.SetupGenesisBlock(log.New(), db, g, &configs.BaseAccount{
		Address:    address,
		PrivateKey: *privateKey,
	})
}

func SetupBlockchain() (*blockchain.BlockChain, error) {
	initValue := genesis.ToCell(int64(math.Pow10(6)))

	var genesisAccounts = map[string]*big.Int{
		"0x1234": initValue,
		"0x5678": initValue,
		"0xabcd": initValue,
		"0xc1fe56E3F58D3244F606306611a5d10c8333f1f6": initValue,
		"0xfF3dac4f04dDbD24dE5D6039F90596F0a8bb08fd": initValue,
	}
	blockDB := memorydb.New()
	kaiDb := kvstore.NewStoreDB(blockDB)
	g := genesis.DefaultTestnetFullGenesisBlock(genesisAccounts, map[string]string{})
	chainConfig, _, genesisErr := setupGenesis(g, kaiDb)
	if genesisErr != nil {
		return nil, genesisErr
	}

	bc, err := blockchain.NewBlockChain(log.New(), kaiDb, chainConfig, true)
	return bc, err
}

func TestSetInflation(t *testing.T) {
	bc, err := SetupBlockchain()
	if err != nil {
		t.Fatal(err)
	}
	state, err := bc.State()
	if err != nil {
		t.Fatal(err)
	}
	// Setup contract code into genesis state
	address := common.HexToAddress("0x0a")
	validator := common.HexToAddress("0x1111")

	state.SetCode(address, stakingSmcCode)
	abi, err := abi.JSON(strings.NewReader(stakingSmcDefinition))
	if err != nil {
		t.Fatal(err)
	}

	// Successfully
	setInflation, err := abi.Pack("setInflation", big.NewInt(100))
	if err != nil {
		t.Fatal(err)
	}

	_, _, err = sample_kvm.Call(address, setInflation, &sample_kvm.Config{State: state, Origin: validator})
	if err != nil {
		t.Fatal(err)
	}

	getInflation, err := abi.Pack("getInflation")
	if err != nil {
		t.Fatal(err)
	}
	result, _, err := sample_kvm.Call(address, getInflation, &sample_kvm.Config{State: state})
	if err != nil {
		t.Fatal(err)
	}

	num := new(big.Int).SetBytes(result)
	if num.Cmp(big.NewInt(100)) != 0 {
		t.Error("Expected 100, got ", num)
	}
}

func TestSetTotalSupply(t *testing.T) {
	bc, err := SetupBlockchain()
	if err != nil {
		t.Fatal(err)
	}
	state, err := bc.State()
	if err != nil {
		t.Fatal(err)
	}
	owner := common.HexToAddress("0x1111")

	// Setup contract code into genesis state
	address := common.HexToAddress("0x0a")
	state.SetCode(address, stakingSmcCode)
	abi, err := abi.JSON(strings.NewReader(stakingSmcDefinition))
	if err != nil {
		t.Fatal(err)
	}

	// Successfully
	setTotalSupply, err := abi.Pack("setTotalSupply", big.NewInt(200000))
	if err != nil {
		t.Fatal(err)
	}
	_, _, err = sample_kvm.Call(address, setTotalSupply, &sample_kvm.Config{State: state, Origin: owner})
	if err != nil {
		t.Fatal(err)
	}

	getTotalSupply, err := abi.Pack("getTotalSupply")
	if err != nil {
		t.Fatal(err)
	}
	result, _, err := sample_kvm.Call(address, getTotalSupply, &sample_kvm.Config{State: state, Origin: owner})
	if err != nil {
		t.Fatal(err)
	}
	num := new(big.Int).SetBytes(result)
	if num.Cmp(big.NewInt(200000)) != 0 {
		t.Error("Expected 200000, got ", num)
	}
}

func TestCreateValidator(t *testing.T) {
	bc, err := SetupBlockchain()
	if err != nil {
		t.Fatal(err)
	}
	state, err := bc.State()
	if err != nil {
		t.Fatal(err)
	}
	owner := common.HexToAddress("0x1234")
	// Setup contract code into genesis state
	address := common.HexToAddress("0x0a")
	state.SetCode(address, stakingSmcCode)
	abi, err := abi.JSON(strings.NewReader(stakingSmcDefinition))
	if err != nil {
		t.Fatal(err)
	}
	baseProposerReward := big.NewInt(1)
	bonusProposerReward := big.NewInt(1)
	slashFractionDowntime := big.NewInt(1)
	slashFractionDoubleSign := big.NewInt(2)
	unBondingTime := big.NewInt(1)
	signedBlockWindow := big.NewInt(2)
	minSignedBlockPerWindow := big.NewInt(1)
	// set params
	setParams, err := abi.Pack("setParams", big.NewInt(100), big.NewInt(600), baseProposerReward, bonusProposerReward, slashFractionDowntime, slashFractionDoubleSign, unBondingTime, signedBlockWindow, minSignedBlockPerWindow)
	if err != nil {
		t.Fatal(err)
	}
	_, _, err = sample_kvm.Call(address, setParams, &sample_kvm.Config{State: state, Origin: owner})
	if err != nil {
		t.Fatal(err)
	}

	// Successfully
	validator1 := common.HexToAddress("0xc1fe56E3F58D3244F606306611a5d10c8333f1f6")
	maxRate := big.NewInt(20)
	maxChangeRate := big.NewInt(5)
	minSelfDelegation := big.NewInt(5)
	createValidator, err := abi.Pack("createValidator", big.NewInt(2), maxRate, maxChangeRate, minSelfDelegation)
	if err != nil {
		t.Fatal(err)
	}
	_, _, err = sample_kvm.Call(address, createValidator, &sample_kvm.Config{State: state, Value: big.NewInt(3999999999), Origin: validator1})
	if err != nil {
		t.Fatal(err)
	}
	//check get delegation
	getDelegation, err := abi.Pack("getDelegation", validator1, validator1)
	if err != nil {
		t.Fatal(err)
	}
	result, _, err := sample_kvm.Call(address, getDelegation, &sample_kvm.Config{State: state, Origin: owner})
	if err != nil {
		t.Fatal(err)
	}
	num := new(big.Int).SetBytes(result)
	if num.Cmp(big.NewInt(1000000000000000000)) != 0 {
		t.Error("Expected delegation 1000000000000000000, got #", num)
	}
	//check get validator
	getValidator, err := abi.Pack("getValidator", validator1)
	if err != nil {
		t.Fatal(err)
	}
	result, _, err = sample_kvm.Call(address, getValidator, &sample_kvm.Config{State: state, Origin: owner})
	if err != nil {
		t.Fatal(err)
	}
	//check bond
	num = new(big.Int).SetBytes(result[:32])
	if num.Cmp(big.NewInt(3999999999)) != 0 {
		t.Error("Expected delegation 3999999999, got #", num)
	}
	//check delegation shares
	num = new(big.Int).SetBytes(result[32:64])
	if num.Cmp(big.NewInt(1000000000000000000)) != 0 {
		t.Error("Expected delegation 1000000000000000000, got #", num)
	}
	//check get validators
	getValidators, err := abi.Pack("getValidators")
	if err != nil {
		t.Fatal(err)
	}
	result, _, err = sample_kvm.Call(address, getValidators, &sample_kvm.Config{State: state, Origin: owner})
	if err != nil {
		t.Fatal(err)
	}

	//check get address of validator from getValidators
	validatorAddress := hex.EncodeToString(result[140:160])
	if strings.TrimRight(validatorAddress, "\n") != "c1fe56e3f58d3244f606306611a5d10c8333f1f6" {
		t.Error("Error for address")
	}
	//check get token of validator from getValidators
	num = new(big.Int).SetBytes(result[192:224])
	if num.Cmp(big.NewInt(3999999999)) != 0 {
		t.Error("Expected delegation 3999999999, got #", num)
	}
	//check delegations shares from getValidators
	num = new(big.Int).SetBytes(result[256:288])
	if num.Cmp(big.NewInt(1000000000000000000)) != 0 {
		t.Error("Expected delegation 1000000000000000000, got #", num)
	}
	//check get getAllDelegatorStake
	getAllDelegatorStake, err := abi.Pack("getAllDelegatorStake", validator1)
	if err != nil {
		t.Fatal(err)
	}
	result, _, err = sample_kvm.Call(address, getAllDelegatorStake, &sample_kvm.Config{State: state, Origin: owner})
	if err != nil {
		t.Fatal(err)
	}
	num = new(big.Int).SetBytes(result)
	if num.Cmp(big.NewInt(3999999999)) != 0 {
		t.Error("Expected delegation 3999999999, got #", num)
	}

}
func TestDelegate(t *testing.T) {
	bc, err := SetupBlockchain()
	if err != nil {
		t.Fatal(err)
	}
	state, err := bc.State()
	if err != nil {
		t.Fatal(err)
	}
	owner := common.HexToAddress("0x1234")
	// Setup contract code into genesis state
	address := common.HexToAddress("0x0a")
	state.SetCode(address, stakingSmcCode)
	abi, err := abi.JSON(strings.NewReader(stakingSmcDefinition))
	if err != nil {
		t.Fatal(err)
	}
	baseProposerReward := big.NewInt(1)
	bonusProposerReward := big.NewInt(1)
	slashFractionDowntime := big.NewInt(1)
	slashFractionDoubleSign := big.NewInt(2)
	unBondingTime := big.NewInt(1)
	signedBlockWindow := big.NewInt(2)
	minSignedBlockPerWindow := big.NewInt(1)
	// set params
	setParams, err := abi.Pack("setParams", big.NewInt(100), big.NewInt(600), baseProposerReward, bonusProposerReward, slashFractionDowntime, slashFractionDoubleSign, unBondingTime, signedBlockWindow, minSignedBlockPerWindow)
	if err != nil {
		t.Fatal(err)
	}
	_, _, err = sample_kvm.Call(address, setParams, &sample_kvm.Config{State: state, Origin: owner})
	if err != nil {
		t.Fatal(err)
	}

	//create validator
	validator1 := common.HexToAddress("0xc1fe56E3F58D3244F606306611a5d10c8333f1f6")
	maxRate := big.NewInt(20)
	maxChangeRate := big.NewInt(5)
	minSelfDelegation := big.NewInt(5)
	createValidator, err := abi.Pack("createValidator", big.NewInt(2), maxRate, maxChangeRate, minSelfDelegation)
	if err != nil {
		t.Fatal(err)
	}
	_, _, err = sample_kvm.Call(address, createValidator, &sample_kvm.Config{State: state, Value: big.NewInt(3999999999), Origin: validator1})
	if err != nil {
		t.Fatal(err)
	}
	//check delegate
	bond1 := big.NewInt(20000)
	// bond2 := big.NewInt(20000)
	account1 := common.HexToAddress("0xfF3dac4f04dDbD24dE5D6039F90596F0a8bb08fd")
	// account2 := common.HexToAddress("0x5678")
	delegate, err := abi.Pack("delegate", validator1)
	if err != nil {
		t.Fatal(err)
	}
	_, _, err = sample_kvm.Call(address, delegate, &sample_kvm.Config{State: state, Value: bond1, Origin: account1})
	if err != nil {
		t.Fatal(err)
	}

	//check get delegation
	getValidatorsByDelegator, err := abi.Pack("getValidatorsByDelegator", account1)
	if err != nil {
		t.Fatal(err)
	}
	result, _, err := sample_kvm.Call(address, getValidatorsByDelegator, &sample_kvm.Config{State: state, Origin: account1})
	if err != nil {
		t.Fatal(err)
	}
	validatorAddress := hex.EncodeToString(result[76:96])
	if strings.TrimRight(validatorAddress, "\n") != "c1fe56e3f58d3244f606306611a5d10c8333f1f6" {
		t.Error("Error for address")
	}

	//check get delegation
	getDelegation, err := abi.Pack("getDelegation", validator1, account1)
	if err != nil {
		t.Fatal(err)
	}
	result, _, err = sample_kvm.Call(address, getDelegation, &sample_kvm.Config{State: state, Origin: account1})
	if err != nil {
		t.Fatal(err)
	}
	num := new(big.Int).SetBytes(result)
	if num.Cmp(big.NewInt(5000000001250)) != 0 {
		t.Error("Expected delegation 5000000001250, got #", num)
	}

	//check get delegation by validator
	getDelegationsByValidator, err := abi.Pack("getDelegationsByValidator", validator1)
	if err != nil {
		t.Fatal(err)
	}
	result, _, err = sample_kvm.Call(address, getDelegationsByValidator, &sample_kvm.Config{State: state, Origin: validator1})
	if err != nil {
		t.Fatal(err)
	}

	delAddress := hex.EncodeToString(result[140:160])
	if strings.TrimRight(delAddress, "\n") != "ff3dac4f04ddbd24de5d6039f90596f0a8bb08fd" {
		t.Error("Error for address")
	}

	getAllDelegatorStake, err := abi.Pack("getAllDelegatorStake", account1)
	if err != nil {
		t.Fatal(err)
	}
	result, _, err = sample_kvm.Call(address, getAllDelegatorStake, &sample_kvm.Config{State: state, Origin: owner})
	if err != nil {
		t.Fatal(err)
	}

	// check undelegate
	amountUndel := big.NewInt(500)
	undelegate, err := abi.Pack("undelegate", validator1, amountUndel)
	if err != nil {
		t.Fatal(err)
	}
	_, _, err = sample_kvm.Call(address, undelegate, &sample_kvm.Config{State: state, Origin: account1})
	if err != nil {
		t.Fatal(err)
	}

	getAllDelegatorStake, err = abi.Pack("getAllDelegatorStake", account1)
	if err != nil {
		t.Fatal(err)
	}
	result, _, err = sample_kvm.Call(address, getAllDelegatorStake, &sample_kvm.Config{State: state, Origin: owner})
	if err != nil {
		t.Fatal(err)
	}
	num = new(big.Int).SetBytes(result)
	if num.Cmp(big.NewInt(19500)) != 0 {
		t.Error("Expected delegation 19500, got #", num)
	}

	//check get getAllDelegatorStake
	getUBDEntries, err := abi.Pack("getUBDEntries", validator1, account1)
	if err != nil {
		t.Fatal(err)
	}
	result, _, err = sample_kvm.Call(address, getUBDEntries, &sample_kvm.Config{State: state, Origin: owner})
	if err != nil {
		t.Fatal(err)
	}
	num = new(big.Int).SetBytes(result[96:128])
	if num.Cmp(big.NewInt(499)) != 0 {
		t.Error("Expected delegation 499, got #", num)
	}

	//check apply and return validator sets
	applyAndReturnValidatorSets, err := abi.Pack("applyAndReturnValidatorSets")
	if err != nil {
		t.Fatal(err)
	}
	result, _, err = sample_kvm.Call(address, applyAndReturnValidatorSets, &sample_kvm.Config{State: state, Origin: validator1})
	if err != nil {
		t.Fatal(err)
	}

}

func TestDoubleSign(t *testing.T) {
	bc, err := SetupBlockchain()
	if err != nil {
		t.Fatal(err)
	}
	state, err := bc.State()
	if err != nil {
		t.Fatal(err)
	}
	owner := common.HexToAddress("0x1234")
	// Setup contract code into genesis state
	address := common.HexToAddress("0x0a")
	state.SetCode(address, stakingSmcCode)
	abi, err := abi.JSON(strings.NewReader(stakingSmcDefinition))
	if err != nil {
		t.Fatal(err)
	}
	baseProposerReward := big.NewInt(1)
	bonusProposerReward := big.NewInt(1)
	slashFractionDowntime := big.NewInt(1)
	slashFractionDoubleSign := big.NewInt(2)
	unBondingTime := big.NewInt(1)
	signedBlockWindow := big.NewInt(2)
	minSignedBlockPerWindow := big.NewInt(1)
	// set params
	setParams, err := abi.Pack("setParams", big.NewInt(100), big.NewInt(600), baseProposerReward, bonusProposerReward, slashFractionDowntime, slashFractionDoubleSign, unBondingTime, signedBlockWindow, minSignedBlockPerWindow)
	if err != nil {
		t.Fatal(err)
	}
	_, _, err = sample_kvm.Call(address, setParams, &sample_kvm.Config{State: state, Origin: owner})
	if err != nil {
		t.Fatal(err)
	}
	// Successfully
	validator1 := common.HexToAddress("0xc1fe56E3F58D3244F606306611a5d10c8333f1f6")
	maxRate := big.NewInt(20)
	maxChangeRate := big.NewInt(5)
	minSelfDelegation := big.NewInt(5)
	createValidator, err := abi.Pack("createValidator", big.NewInt(2), maxRate, maxChangeRate, minSelfDelegation)
	if err != nil {
		t.Fatal(err)
	}
	_, _, err = sample_kvm.Call(address, createValidator, &sample_kvm.Config{State: state, Value: big.NewInt(3999999999), Origin: validator1})
	if err != nil {
		t.Fatal(err)
	}
	//check get delegation
	doubleSign, err := abi.Pack("doubleSign", validator1, big.NewInt(200000), big.NewInt(7))
	if err != nil {
		t.Fatal(err)
	}
	_, _, err = sample_kvm.Call(address, doubleSign, &sample_kvm.Config{State: state, Origin: validator1})
	if err != nil {
		t.Fatal(err)
	}
}
