syntax = "proto3";
package kardiachain.types;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "kardiachain/types/types.proto";

option go_package = "github.com/kardiachain/go-kardia/proto/kardiachain/types";

message CanonicalBlockID {
    bytes                  hash            = 1;
    CanonicalPartSetHeader part_set_header = 2 [(gogoproto.nullable) = false];
  }
  

  message CanonicalPartSetHeader {
    uint32 total = 1;
    bytes  hash  = 2;
  }
  


  message CanonicalProposal {
    SignedMsgType             type      = 1;  // type alias for byte
    uint64                  height    = 2;  // canonicalization requires fixed size encoding here
    uint32                  round     = 3;  // canonicalization requires fixed size encoding here
    uint32                     pol_round = 4 [(gogoproto.customname) = "POLRound"];
    CanonicalBlockID          block_id  = 5 [(gogoproto.customname) = "BlockID"];
    google.protobuf.Timestamp timestamp = 6 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
    string                    chain_id  = 7 [(gogoproto.customname) = "ChainID"];
  }
  
  message CanonicalVote {
    SignedMsgType             type      = 1;  // type alias for byte
    uint64                  height    = 2;  // canonicalization requires fixed size encoding here
    uint32                 round     = 3;  // canonicalization requires fixed size encoding here
    CanonicalBlockID          block_id  = 4 [(gogoproto.customname) = "BlockID"];
    google.protobuf.Timestamp timestamp = 5 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
    string                    chain_id  = 6 [(gogoproto.customname) = "ChainID"];
  }